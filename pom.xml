<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.example</groupId>
    <artifactId>im-live</artifactId>
    <version>${revision}</version>
    <packaging>pom</packaging>
    <modules>
        <module>im-live-user</module>
        <module>im-live-msg</module>
        <module>im-live-common</module>
        <module>im-live-auth</module>
        <module>im-live-framework</module>
    </modules>

    <properties>
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <flatten-maven-plugin.version>1.3.0</flatten-maven-plugin.version>
        <revision>1.0</revision>
        <java.version>17</java.version>

        <spring-boot.version>3.1.4</spring-boot.version>
        <lb.version>4.0.4</lb.version>
        <spring-cloud-alibaba.version>2022.0.0.0</spring-cloud-alibaba.version>

        <fastjson.version>1.2.56</fastjson.version>
        <hutool.version>5.7.17</hutool.version>
        <lombok.version>1.18.26</lombok.version>
        <mybatis-plus.version>3.5.3.1</mybatis-plus.version>
        <druid.version>1.1.22</druid.version>
        <oauth2-authorization-server.version>1.2.0</oauth2-authorization-server.version>
        <sms4j.version>3.0.3</sms4j.version>
        <commons-lang3.version>3.8.1</commons-lang3.version>
        <protobuf-java.version>3.19.6</protobuf-java.version>
        <dubbo.version>3.2.9</dubbo.version>
        <mysql.version>8.0.16</mysql.version>
        <sharding-jdbc.version>5.3.2</sharding-jdbc.version>


        <spring.security.cas.version>6.1.4</spring.security.cas.version>

    </properties>



    <dependencyManagement>
        <dependencies>


            <dependency>
                <groupId>com.google.protobuf</groupId>
                <artifactId>protobuf-java</artifactId>
                <version>${protobuf-java.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.dubbo</groupId>
                <artifactId>dubbo-bom</artifactId>
                <version>${dubbo.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>com.alibaba.cloud</groupId>
                <artifactId>spring-cloud-alibaba-dependencies</artifactId>
                <version>${spring-cloud-alibaba.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-loadbalancer</artifactId>
                <version>${lb.version}</version>
            </dependency>


            <dependency>
                <groupId>org.example</groupId>
                <artifactId>im-live-user-interface</artifactId>
                <version>${revision}</version>
            </dependency>

            <dependency>
                <groupId>org.example</groupId>
                <artifactId>im-live-msg-interface</artifactId>
                <version>${revision}</version>
            </dependency>

            <dependency>
                <groupId>org.example</groupId>
                <artifactId>im-live-auth-interface</artifactId>
                <version>${revision}</version>
            </dependency>

            <dependency>
                <groupId>org.example</groupId>
                <artifactId>im-live-redis-starter</artifactId>
                <version>${revision}</version>
            </dependency>

            <dependency>
                <groupId>org.example</groupId>
                <artifactId>im-live-common</artifactId>
                <version>${revision}</version>
            </dependency>


            <dependency>
                <groupId>org.dromara.sms4j</groupId>
                <artifactId>sms4j-spring-boot-starter</artifactId>
                <version>${sms4j.version}</version>
            </dependency>

            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus-boot-starter</artifactId>
                <version>${mybatis-plus.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.security</groupId>
                <artifactId>spring-security-oauth2-authorization-server</artifactId>
                <version>${oauth2-authorization-server.version}</version>
            </dependency>
            <!--解决报错 java.lang.ClassNotFoundException: org.springframework.security.cas.jackson2.CasJackson2Module -->
            <dependency>
                <groupId>org.springframework.security</groupId>
                <artifactId>spring-security-cas</artifactId>
                <version>${spring.security.cas.version}</version>
            </dependency>


            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>${commons-lang3.version}</version>
            </dependency>

            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>fastjson</artifactId>
                <version>${fastjson.version}</version>
            </dependency>

            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
            </dependency>

            <dependency>
                <groupId>cn.hutool</groupId>
                <artifactId>hutool-all</artifactId>
                <version>${hutool.version}</version>
            </dependency>


            <dependency>
                <groupId>org.apache.shardingsphere</groupId>
                <artifactId>shardingsphere-jdbc-core</artifactId>
                <version>${sharding-jdbc.version}</version>
            </dependency>


            <!-- druid -->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid-spring-boot-starter</artifactId>
                <version>${druid.version}</version>
            </dependency>

            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>${mysql.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <profiles>


        <profile>
            <id>KubeSphere</id>
            <properties>
                <!-- 环境标识，需要与配置文件的名称相对应 -->
                <profiles.active>KubeSphere</profiles.active>
                <nacos.server>nacos.im-live:8848,nacos-node1.im-live:8848,nacos-node2.im-live:8848</nacos.server>
                <nacos.discovery.group>DEFAULT_GROUP</nacos.discovery.group>
                <namespace>dev</namespace>
                <nacos.config.group>DEFAULT_GROUP</nacos.config.group>
            </properties>

            <activation>
                <!-- 默认环境 -->
                <activeByDefault>true</activeByDefault>
            </activation>
        </profile>
    </profiles>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <encoding>UTF-8</encoding>

                </configuration>
            </plugin>

            <!-- 统一版本号管理 -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>flatten-maven-plugin</artifactId>
                <version>${flatten-maven-plugin.version}</version>
                <configuration>
                    <updatePomFile>true</updatePomFile>
                    <flattenMode>resolveCiFriendliesOnly</flattenMode>
                </configuration>
                <executions>
                    <execution>
                        <id>flatten</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>flatten</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>flatten.clean</id>
                        <phase>clean</phase>
                        <goals>
                            <goal>clean</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
    </build>

</project>