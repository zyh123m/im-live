kind: Deployment
apiVersion: apps/v1
metadata:
  name: mysql
  namespace: im-live
  labels:
    app: mysql
    version: v1
  annotations:
    deployment.kubernetes.io/revision: '18'
    kubesphere.io/creator: dev-zhang
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql
      version: v1
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: mysql
        version: v1
      annotations:
        kubesphere.io/creator: dev-zhang
        kubesphere.io/imagepullsecrets: '{}'
        kubesphere.io/restartedAt: '2023-11-28T00:40:47.438Z'
        logging.kubesphere.io/logsidecar-config: '{}'
    spec:
      volumes:
        - name: host-time
          hostPath:
            path: /etc/localtime
            type: ''
        - name: volume-aa7x09
          configMap:
            name: mysql-conf
            items:
              - key: master.cnf
                path: my.cnf
            defaultMode: 420
        - name: volume-duaeft
          persistentVolumeClaim:
            claimName: mysql-master-pv
      containers:
        - name: container-mysql-master
          image: 'mysql:8.2'
          ports:
            - name: tcp-3306
              containerPort: 3306
              protocol: TCP
            - name: tcp-33060
              containerPort: 33060
              protocol: TCP
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: root
          resources: {}
          volumeMounts:
            - name: host-time
              readOnly: true
              mountPath: /etc/localtime
            - name: volume-aa7x09
              readOnly: true
              mountPath: /etc/mysql/conf.d
            - name: volume-duaeft
              mountPath: /var/lib/mysql
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: IfNotPresent
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      serviceAccountName: default
      serviceAccount: default
      securityContext: {}
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600
